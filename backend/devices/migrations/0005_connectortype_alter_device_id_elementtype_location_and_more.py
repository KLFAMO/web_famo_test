# Generated by Django 5.1.7 on 2025-10-17 09:25

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('devices', '0004_auto_20241215_1907'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConnectorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=40, unique=True)),
                ('label', models.CharField(max_length=80)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('NA', 'N/A')], default='NA', max_length=6)),
                ('notes', models.TextField(blank=True)),
                ('properties', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.AlterField(
            model_name='device',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='ElementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160)),
                ('vendor', models.CharField(blank=True, max_length=120)),
                ('model', models.CharField(blank=True, max_length=120)),
                ('properties_template', models.JSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'unique_together': {('vendor', 'model', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=50)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='devices.location')),
            ],
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('serial', models.CharField(blank=True, max_length=120)),
                ('description', models.TextField(blank=True)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('is_module', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='devices.element')),
                ('element_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='elements', to='devices.elementtype')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='elements', to='devices.location')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac_addr', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message='MAC w formacie XX:XX:XX:XX:XX:XX', regex='^[0-9A-Fa-f]{2}(:[0-9A-Fa-f]{2}){5}$')])),
                ('network_type', models.CharField(choices=[('FAMO', 'FAMO Network'), ('IF', 'Institute Network')], max_length=4, verbose_name='Network Type')),
                ('description', models.CharField(blank=True, max_length=120, verbose_name='Description')),
                ('active', models.BooleanField(default=True)),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network_interfaces', to='devices.element', verbose_name='Element')),
            ],
        ),
        migrations.CreateModel(
            name='IpAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('STATIC', 'Static'), ('DHCP', 'DHCP')], max_length=10)),
                ('network_type', models.CharField(choices=[('FAMO', 'FAMO Network'), ('IF', 'Institute Network')], max_length=4)),
                ('mac_addr', models.CharField(db_index=True, max_length=17, validators=[django.core.validators.RegexValidator(message='MAC w formacie XX:XX:XX:XX:XX:XX', regex='^[0-9A-Fa-f]{2}(:[0-9A-Fa-f]{2}){5}$')])),
                ('ip_addr', models.GenericIPAddressField(db_index=True, protocol='IPv4')),
                ('hostname', models.CharField(blank=True, max_length=63)),
                ('active', models.BooleanField(default=True)),
                ('interface', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ip_assignments', to='devices.networkinterface', to_field='mac_addr')),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('number', models.PositiveIntegerField(blank=True, null=True)),
                ('direction', models.CharField(choices=[('IN', 'In'), ('OUT', 'Out'), ('INOUT', 'In/Out')], default='INOUT', max_length=6)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('connector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ports', to='devices.connectortype')),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ports', to='devices.element')),
            ],
        ),
        migrations.CreateModel(
            name='ExposedPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=60)),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exposed_ports', to='devices.element')),
                ('inner_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exposed_as', to='devices.port')),
            ],
            options={
                'ordering': ['module_id', 'order', 'alias'],
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medium', models.CharField(choices=[('CABLE', 'Cable/Connector'), ('FREE', 'Free-space'), ('VIRTUAL', 'Virtual/Logical')], default='CABLE', max_length=8)),
                ('active', models.BooleanField(default=True)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cable_element', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_cable_for', to='devices.element')),
                ('a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections_a', to='devices.port')),
                ('b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections_b', to='devices.port')),
            ],
        ),
        migrations.CreateModel(
            name='PortType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=40, unique=True)),
                ('label', models.CharField(max_length=100)),
                ('kind', models.CharField(choices=[('RF', 'RF'), ('ANALOG', 'Analog Voltage/Current'), ('ETH', 'Ethernet'), ('LASER', 'Laser Beam'), ('TTL', 'TTL'), ('OTHER', 'Other')], max_length=10)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('default_connector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_for_types', to='devices.connectortype')),
            ],
        ),
        migrations.AddField(
            model_name='port',
            name='port_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ports', to='devices.porttype'),
        ),
        migrations.AddIndex(
            model_name='element',
            index=models.Index(fields=['is_module'], name='devices_ele_is_modu_ea0caa_idx'),
        ),
        migrations.AddIndex(
            model_name='ipassignment',
            index=models.Index(fields=['active', 'network_type', 'mac_addr'], name='devices_ipa_active_9ac46b_idx'),
        ),
        migrations.AddIndex(
            model_name='ipassignment',
            index=models.Index(fields=['active', 'network_type', 'ip_addr'], name='devices_ipa_active_4c0fa0_idx'),
        ),
        migrations.AddConstraint(
            model_name='ipassignment',
            constraint=models.UniqueConstraint(condition=models.Q(('active', True)), fields=('network_type', 'mac_addr', 'kind'), name='uq_active_by_mac_kind_network'),
        ),
        migrations.AddConstraint(
            model_name='ipassignment',
            constraint=models.UniqueConstraint(condition=models.Q(('active', True)), fields=('network_type', 'ip_addr'), name='uq_active_ip_per_network'),
        ),
        migrations.AddConstraint(
            model_name='exposedport',
            constraint=models.UniqueConstraint(fields=('module', 'alias'), name='uq_exposed_alias_per_module'),
        ),
        migrations.AddConstraint(
            model_name='exposedport',
            constraint=models.UniqueConstraint(fields=('module', 'inner_port'), name='uq_exposed_unique_mapping'),
        ),
        migrations.AddIndex(
            model_name='connection',
            index=models.Index(fields=['active'], name='devices_con_active_1e2f80_idx'),
        ),
        migrations.AddConstraint(
            model_name='connection',
            constraint=models.CheckConstraint(condition=models.Q(('a', models.F('b')), _negated=True), name='ck_conn_distinct_ports'),
        ),
        migrations.AddConstraint(
            model_name='connection',
            constraint=models.UniqueConstraint(condition=models.Q(('active', True)), fields=('a', 'b'), name='uq_active_conn_ab'),
        ),
        migrations.AddIndex(
            model_name='port',
            index=models.Index(fields=['element'], name='devices_por_element_51a875_idx'),
        ),
        migrations.AddConstraint(
            model_name='port',
            constraint=models.UniqueConstraint(fields=('element', 'name'), name='uq_port_element_name'),
        ),
        migrations.AddConstraint(
            model_name='port',
            constraint=models.UniqueConstraint(condition=models.Q(('number__isnull', False)), fields=('element', 'number'), name='uq_port_element_number'),
        ),
    ]
